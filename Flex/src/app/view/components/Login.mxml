<?xml version="1.0" encoding="utf-8"?>
<s:Scroller xmlns:fx="http://ns.adobe.com/mxml/2009"
		 xmlns:s="library://ns.adobe.com/flex/spark"
		 xmlns:mx="library://ns.adobe.com/flex/mx"
		 xmlns:subComponents="app.view.components.subComponents.*" fontSize="16">
	<fx:Script>
		<![CDATA[
			import mx.core.BitmapAsset;
			import mx.events.FlexEvent;
			import mx.events.ResizeEvent;
			
			import spark.core.SpriteVisualElement;
			
			[Bindable]
			[Embed(source="assets/image/login.png")]
			private var imageLoginBack:Class;
			private var loginBackData:BitmapAsset =  BitmapAsset(new imageLoginBack());
			
			public static const SUBMIT:String = "submit";
			public static const EXIT:String = "exit";	
						
			private var drawed:Boolean = false;			
			protected function center_updateCompleteHandler(event:FlexEvent):void
			{
				if(drawed)
				{
					return ;
				}
				else
				{
					drawed = true;
				}
				
				refreshBack();
			}
						
			public function refreshBack():void
			{
				const GRID_WIDTH:Number = 80;
				const GRID_HEIGHT:Number = 60;
				
				for(var i:Number = back.numElements;i > 1;i--)
				{
					back.removeElementAt(i - 1);
				}
				
				if(back.width <= center.width)
				{
					center.x = 0;
				}
				else
				{
					center.x = (back.width - center.width) / 2;
				}
				
				if(back.height <= center.height)
				{
					center.y = 0;
				}
				else
				{
					center.y = (back.height - center.height) / 2;
				}
				
				if((back.width > center.width) && (back.height > center.height))
				{
					//LEFT-TOP
					var sourcBitmap:BitmapData = new BitmapData(GRID_WIDTH,GRID_HEIGHT);
					sourcBitmap.copyPixels(loginBackData.bitmapData
						,new Rectangle(0,0,sourcBitmap.width,sourcBitmap.height)
						,new Point(0,0));
					
					var v:SpriteVisualElement = new SpriteVisualElement;
					v.x = 0;
					v.y = 0;
					v.width = (back.width - center.width) / 2 + GRID_WIDTH;
					v.height = (back.height - center.height) / 2 + GRID_HEIGHT;
					
					v.graphics.beginBitmapFill(sourcBitmap
						,new Matrix(v.width / sourcBitmap.width,0,0,v.height / sourcBitmap.height));
					v.graphics.drawRect(0, 0, v.width, v.height);  
					v.graphics.endFill();
					
					back.addElement(v);
										
					//RIGHT-TOP
					sourcBitmap = new BitmapData(GRID_WIDTH,GRID_HEIGHT);
					sourcBitmap.copyPixels(loginBackData.bitmapData
						,new Rectangle(loginBackData.bitmapData.width - GRID_WIDTH,0,sourcBitmap.width,sourcBitmap.height)
						,new Point(0,0)); 
					
					v = new SpriteVisualElement;
					v.x = (back.width + center.width) / 2 - GRID_WIDTH;
					v.y = 0;
					v.width = (back.width - center.width) / 2 + GRID_WIDTH;
					v.height = (back.height - center.height) / 2 + GRID_HEIGHT;
					
					v.graphics.beginBitmapFill(sourcBitmap
						,new Matrix(v.width / sourcBitmap.width,0,0,v.height / sourcBitmap.height));
					v.graphics.drawRect(0, 0, v.width, v.height);  
					v.graphics.endFill();
					
					back.addElement(v);
					
					//LEFT-BOTTOM
					sourcBitmap = new BitmapData(GRID_WIDTH,GRID_HEIGHT);
					sourcBitmap.copyPixels(loginBackData.bitmapData
						,new Rectangle(0,loginBackData.bitmapData.height - GRID_HEIGHT,sourcBitmap.width,sourcBitmap.height)
						,new Point(0,0));
					
					v = new SpriteVisualElement;
					v.x = 0;
					v.y = (back.height + center.height) / 2 - GRID_HEIGHT;
					v.width = (back.width - center.width) / 2 + GRID_WIDTH;
					v.height = (back.height - center.height) / 2 + GRID_HEIGHT;
					
					v.graphics.beginBitmapFill(sourcBitmap
						,new Matrix(v.width / sourcBitmap.width,0,0,v.height / sourcBitmap.height));
					v.graphics.drawRect(0, 0, v.width, v.height);  
					v.graphics.endFill();
					
					back.addElement(v);
					
					//RIGHT-BOTTOM
					sourcBitmap = new BitmapData(GRID_WIDTH,GRID_HEIGHT);
					sourcBitmap.copyPixels(loginBackData.bitmapData
						,new Rectangle(loginBackData.bitmapData.width - GRID_WIDTH,loginBackData.bitmapData.height - GRID_HEIGHT,sourcBitmap.width,sourcBitmap.height)
						,new Point(0,0)); 
					
					v = new SpriteVisualElement;
					v.x = (back.width + center.width) / 2 - GRID_WIDTH;
					v.y = (back.height + center.height) / 2 - GRID_HEIGHT;
					v.width = (back.width - center.width) / 2 + GRID_WIDTH;
					v.height = (back.height - center.height) / 2 + GRID_HEIGHT;
					
					v.graphics.beginBitmapFill(sourcBitmap
						,new Matrix(v.width / sourcBitmap.width,0,0,v.height / sourcBitmap.height));
					v.graphics.drawRect(0, 0, v.width, v.height);  
					v.graphics.endFill();
					
					back.addElement(v);
					
					//LEFT
					sourcBitmap = new BitmapData(GRID_WIDTH,loginBackData.bitmapData.height - 2*GRID_HEIGHT);
					sourcBitmap.copyPixels(loginBackData.bitmapData
						,new Rectangle(0,GRID_HEIGHT,sourcBitmap.width,sourcBitmap.height)
						,new Point(0,0));
					
					v = new SpriteVisualElement;
					v.x = 0;
					v.y = (back.height - center.height) / 2 +  GRID_HEIGHT;
					v.width = (back.width - center.width) / 2 + GRID_WIDTH;
					v.height = sourcBitmap.height;
					
					v.graphics.beginBitmapFill(sourcBitmap
						,new Matrix(v.width / sourcBitmap.width,0,0,v.height / sourcBitmap.height));
					v.graphics.drawRect(0, 0, v.width, v.height);  
					v.graphics.endFill();
					
					back.addElement(v);
					
					//RIGHT
					sourcBitmap = new BitmapData(GRID_WIDTH,loginBackData.bitmapData.height - 2*GRID_HEIGHT);
					sourcBitmap.copyPixels(loginBackData.bitmapData
						,new Rectangle(loginBackData.bitmapData.width - GRID_WIDTH,GRID_HEIGHT,sourcBitmap.width,sourcBitmap.height)
						,new Point(0,0));
					
					v = new SpriteVisualElement;
					v.x = (back.width + center.width) / 2 - GRID_WIDTH;
					v.y = (back.height - center.height) / 2 + GRID_HEIGHT;
					v.width = (back.width - center.width) / 2 + GRID_WIDTH;
					v.height = sourcBitmap.height;
					
					v.graphics.beginBitmapFill(sourcBitmap
						,new Matrix(v.width / sourcBitmap.width,0,0,v.height / sourcBitmap.height));
					v.graphics.drawRect(0, 0, v.width, v.height);  
					v.graphics.endFill();
					
					back.addElement(v);
					
					//TOP
					sourcBitmap = new BitmapData(loginBackData.width - 2 * GRID_WIDTH,GRID_HEIGHT);
					sourcBitmap.copyPixels(loginBackData.bitmapData
						,new Rectangle(GRID_WIDTH,0,sourcBitmap.width,sourcBitmap.height)
						,new Point(0,0));
					
					v = new SpriteVisualElement;
					v.x = (back.width - center.width) / 2 + GRID_WIDTH;
					v.y = 0;
					v.width = sourcBitmap.width;
					v.height = (back.height - center.height) / 2 + GRID_HEIGHT;
					
					v.graphics.beginBitmapFill(sourcBitmap
						,new Matrix(v.width / sourcBitmap.width,0,0,v.height / sourcBitmap.height));
					v.graphics.drawRect(0, 0, v.width, v.height);  
					v.graphics.endFill();
					
					back.addElement(v);
					
					//BOTTOM
					sourcBitmap = new BitmapData(loginBackData.width - 2 * GRID_WIDTH,GRID_HEIGHT);
					sourcBitmap.copyPixels(loginBackData.bitmapData
						,new Rectangle(GRID_WIDTH,loginBackData.bitmapData.height - GRID_HEIGHT,sourcBitmap.width,sourcBitmap.height)
						,new Point(0,0));
					
					v = new SpriteVisualElement;
					v.x = (back.width - center.width) / 2 + GRID_WIDTH;
					v.y = (back.height + center.height) / 2 - GRID_HEIGHT;
					v.width = sourcBitmap.width;
					v.height = (back.height - center.height) / 2 + GRID_HEIGHT;
					
					v.graphics.beginBitmapFill(sourcBitmap
						,new Matrix(v.width / sourcBitmap.width,0,0,v.height / sourcBitmap.height));
					v.graphics.drawRect(0, 0, v.width, v.height);  
					v.graphics.endFill();
					
					back.addElement(v);
				}
				
				if((back.width <= center.width) && (back.height > center.height))
				{
					//TOP
					sourcBitmap = new BitmapData(center.width,GRID_HEIGHT);
					sourcBitmap.copyPixels(loginBackData.bitmapData
						,new Rectangle(0,0,sourcBitmap.width,sourcBitmap.height)
						,new Point(0,0));
					
					v = new SpriteVisualElement;
					v.x = 0;
					v.y = 0;
					v.width = sourcBitmap.width;
					v.height = (back.height - center.height) / 2 + GRID_HEIGHT;
					
					v.graphics.beginBitmapFill(sourcBitmap
						,new Matrix(v.width / sourcBitmap.width,0,0,v.height / sourcBitmap.height));
					v.graphics.drawRect(0, 0, v.width, v.height);  
					v.graphics.endFill();
					
					back.addElement(v);
					
					//BOTTOM
					sourcBitmap = new BitmapData(center.width,GRID_HEIGHT);
					sourcBitmap.copyPixels(loginBackData.bitmapData
						,new Rectangle(0,loginBackData.bitmapData.height - GRID_HEIGHT,sourcBitmap.width,sourcBitmap.height)
						,new Point(0,0));
					
					v = new SpriteVisualElement;
					v.x = 0;
					v.y = (back.height + center.height) / 2 - GRID_HEIGHT;
					v.width = sourcBitmap.width;
					v.height = (back.height - center.height) / 2 + GRID_HEIGHT;
					
					v.graphics.beginBitmapFill(sourcBitmap
						,new Matrix(v.width / sourcBitmap.width,0,0,v.height / sourcBitmap.height));
					v.graphics.drawRect(0, 0, v.width, v.height);  
					v.graphics.endFill();
					
					back.addElement(v);
				}
				
				if((back.width > center.width) && (back.height <= center.height))
				{
					//LEFT
					sourcBitmap = new BitmapData(GRID_WIDTH,center.height);
					sourcBitmap.copyPixels(loginBackData.bitmapData
						,new Rectangle(0,0,sourcBitmap.width,sourcBitmap.height)
						,new Point(0,0));
					
					v = new SpriteVisualElement;
					v.x = 0;
					v.y = 0;
					v.width = (back.width - center.width) / 2 + GRID_WIDTH;
					v.height = sourcBitmap.height;
					
					v.graphics.beginBitmapFill(sourcBitmap
						,new Matrix(v.width / sourcBitmap.width,0,0,v.height / sourcBitmap.height));
					v.graphics.drawRect(0, 0, v.width, v.height);  
					v.graphics.endFill();
					
					back.addElement(v);
					
					//RIGHT
					sourcBitmap = new BitmapData(GRID_WIDTH,center.height);
					sourcBitmap.copyPixels(loginBackData.bitmapData
						,new Rectangle(loginBackData.bitmapData.width - GRID_WIDTH,0,sourcBitmap.width,sourcBitmap.height)
						,new Point(0,0));
					
					v = new SpriteVisualElement;
					v.x = (back.width + center.width) / 2 - GRID_WIDTH;
					v.y = 0;
					v.width = (back.width - center.width) / 2 + GRID_WIDTH;
					v.height = sourcBitmap.height;
					
					v.graphics.beginBitmapFill(sourcBitmap
						,new Matrix(v.width / sourcBitmap.width,0,0,v.height / sourcBitmap.height));
					v.graphics.drawRect(0, 0, v.width, v.height);  
					v.graphics.endFill();
					
					back.addElement(v);
				}
			}
		]]>
	</fx:Script>
	<fx:Declarations>
		<!-- 将非可视元素（例如服务、值对象）放在此处 -->
	</fx:Declarations>	
	<s:Group id="back">
		<s:Group id="center" 
				 updateComplete="center_updateCompleteHandler(event)">				
			<s:Image source="{imageLoginBack}"/>
			<s:HGroup y="590" gap="50" horizontalCenter="0">
				<s:Button skinClass="skins.skinLoginButton" 
						  width="88" height="28" label="登录" buttonDown="dispatchEvent(new Event(SUBMIT));"/>
				<s:Button skinClass="skins.skinLoginButton"
						  width="88" height="28" label="退出" buttonDown="dispatchEvent(new Event(EXIT));"/>
			</s:HGroup>
			<s:TextInput x="620" y="480" width="170" height="30" id="textUserName" 
						 borderVisible="false"
						 enter="dispatchEvent(new Event(SUBMIT));"/>
			<s:TextInput x="620" y="540" width="170" height="30"  id="textUserPassword"
						 borderVisible="false" displayAsPassword="true"
						 enter="dispatchEvent(new Event(SUBMIT));"/>
		</s:Group>		
	</s:Group>	
</s:Scroller>
